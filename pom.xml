<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.geoserver.cloud</groupId>
  <artifactId>gs-cloud-parent</artifactId>
  <version>0.1.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <spring-cloud.version>Hoxton.SR7</spring-cloud.version>
    <spring-boot.version>2.3.2.RELEASE</spring-boot.version>
    <gs.version>2.18-SNAPSHOT</gs.version>
    <fmt.action>format</fmt.action>
    <fmt.skip>false</fmt.skip>
    <fork.javac>false</fork.javac>
    <javac.maxHeapSize>256M</javac.maxHeapSize>

    <dockerfile-maven-plugin.version>1.4.10</dockerfile-maven-plugin.version>
    <docker.image.prefix>${project.groupId}</docker.image.prefix>
    <dockerfile.build.pullNewerImage>false</dockerfile.build.pullNewerImage>
  </properties>

  <repositories>
    <repository>
      <id>spring-repo</id>
      <name>Spring Repository</name>
      <url>https://repo.spring.io/release</url>
    </repository>
    <repository>
      <id>spring-milestone</id>
      <name>Spring Milestone Repository</name>
      <url>https://repo.spring.io/milestone</url>
    </repository>
    <repository>
      <id>osgeo-releases</id>
      <name>OSGeo Nexus Release Repository</name>
      <url>https://repo.osgeo.org/repository/release/</url>
      <!-- contains release (including third-party-dependences) -->
      <!-- Restlet maven Repository (http://maven.restlet.org) -->
      <!-- ucar (https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases) -->
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>

    <repository>
      <id>osgeo-snapshots</id>
      <name>OSGeo Nexus Snapshot Repository</name>
      <url>https://repo.osgeo.org/repository/snapshot/</url>
      <!-- contains snapshots -->
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>

    <repository>
      <id>geosolutions</id>
      <name>geosolutions repository</name>
      <url>https://maven.geo-solutions.it/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-starter-webmvc</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-starter-reactive</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-pluggable-catalog-support</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-catalog-event-bus</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-catalog-cache</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.cloud</groupId>
        <artifactId>gs-cloud-catalog-backend-starter</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <!-- originally transitive from spring-cloud-starter-netflix-eureka-server, adding explicitly to exclude ribbon in 
          favor of spring-cloud-loadbalancer -->
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-netflix-archaius</artifactId>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-netflix-ribbon</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.18.12</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-main</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wms</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wfs</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wcs</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wcs1_0</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wcs1_1</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wcs2_0</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-wps-core</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-web-wps</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-restconfig</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-restconfig-wcs</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-restconfig-wfs</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-restconfig-wms</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-restconfig-wmts</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.community</groupId>
        <artifactId>gs-jdbcconfig</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver.community</groupId>
        <artifactId>gs-jdbcstore</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-gwc</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-web-resource</artifactId>
        <version>${gs.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.coveo</groupId>
          <artifactId>fmt-maven-plugin</artifactId>
          <version>2.4.0</version>
        </plugin>
        <plugin>
          <!-- https://github.com/spotify/dockerfile-maven -->
          <groupId>com.spotify</groupId>
          <artifactId>dockerfile-maven-plugin</artifactId>
          <version>${dockerfile-maven-plugin.version}</version>
          <inherited>true</inherited>
          <executions>
            <execution>
              <id>default</id>
              <goals>
                <goal>build</goal>
                <!-- goal>push</goal -->
              </goals>
            </execution>
          </executions>
          <configuration>
            <repository>${docker.image.prefix}/${project.artifactId}</repository>
            <tag>${project.version}</tag>
            <buildArgs>
              <TAG>${project.version}</TAG>
              <JAR_FILE>${project.build.finalName}-bin.jar</JAR_FILE>
            </buildArgs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <inherited>true</inherited>
          <executions>
            <execution>
              <goals>
                <goal>repackage</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <attach>false</attach>
            <classifier>bin</classifier>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.surefire</groupId>
              <artifactId>surefire-junit47</artifactId>
              <version>3.0.0-M5</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <configuration>
          <verbose>false</verbose>
          <filesNamePattern>.*\.java</filesNamePattern>
          <skip>${fmt.skip}</skip>
          <style>aosp</style>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>${fmt.action}</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <release>11</release>
          <debug>true</debug>
          <encoding>UTF-8</encoding>
          <fork>${fork.javac}</fork>
          <maxmem>${javac.maxHeapSize}</maxmem>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
  <modules>
    <module>docker-base-java</module>
    <module>support-services</module>
    <module>catalog-support</module>
    <module>starters</module>
    <module>services</module>
  </modules>
</project>
