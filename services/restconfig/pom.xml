<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.geoserver.cloud</groupId>
    <artifactId>gs-cloud-services-parent</artifactId>
    <version>0.2.2-SNAPSHOT</version>
  </parent>
  <artifactId>gs-cloud-restconfig-v1</artifactId>
  <name>restconfig-service</name>
  <packaging>jar</packaging>
  <properties>
    <start-class>org.geoserver.cloud.restconfig.RestConfigApplication</start-class>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-starter-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-starter-vector-formats</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-starter-raster-formats</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver</groupId>
      <artifactId>gs-restconfig</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver</groupId>
      <artifactId>gs-restconfig-wcs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver</groupId>
      <artifactId>gs-restconfig-wfs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver</groupId>
      <artifactId>gs-restconfig-wms</artifactId>
    </dependency>
    <!-- <dependency> <groupId>org.geoserver</groupId> <artifactId>gs-restconfig-wmts</artifactId> </dependency> -->
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- test data, remove once we get rid of it -->
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${maven.multiModuleProjectDirectory}/services/data</directory>
                  <includes>test_data.tar.gz</includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>docker</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- measure to include dependencies not really needed for this service but whose absence make the catalog fail with 
        exceptions like "com.thoughtworks.xstream.mapper.CannotResolveClassException: org.geoserver.gwc.wmts.WMTSInfoImpl". Nonetheless, 
        the spring configuration for these extra dependencies won't be loaded at all -->
      <id>xstreamPersisterDependencies</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <!-- just to avoid a com.thoughtworks.xstream.mapper.CannotResolveClassException: org.geoserver.wfs.WFSInfoImpl -->
          <groupId>org.geoserver</groupId>
          <artifactId>gs-wfs</artifactId>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <!-- just to avoid a com.thoughtworks.xstream.mapper.CannotResolveClassException: org.geoserver.wms.WMSInfoImpl -->
          <groupId>org.geoserver</groupId>
          <artifactId>gs-wms</artifactId>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <!-- just to avoid a com.thoughtworks.xstream.mapper.CannotResolveClassException: org.geoserver.wcs.WCSInfoImpl -->
          <groupId>org.geoserver</groupId>
          <artifactId>gs-wcs</artifactId>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <!-- just to avoid a com.thoughtworks.xstream.mapper.CannotResolveClassException: org.geoserver.wps.WPSInfoImpl -->
          <groupId>org.geoserver.extension</groupId>
          <artifactId>gs-wps-core</artifactId>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <!-- just to avoid a com.thoughtworks.xstream.mapper.CannotResolveClassException: org.geoserver.gwc.WMTSInfoImpl -->
          <groupId>org.geoserver</groupId>
          <artifactId>gs-gwc</artifactId>
          <exclusions>
            <exclusion>
              <groupId>*</groupId>
              <artifactId>*</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
        <dependency>
          <groupId>org.geotools</groupId>
          <artifactId>gt-process</artifactId>
        </dependency>
        <dependency>
          <groupId>org.geotools</groupId>
          <artifactId>gt-process-geometry</artifactId>
        </dependency>
        <dependency>
          <groupId>org.geotools</groupId>
          <artifactId>gt-process-raster</artifactId>
        </dependency>
        <dependency>
          <groupId>org.geotools</groupId>
          <artifactId>gt-process-feature</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>importer</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.geoserver.importer</groupId>
          <artifactId>gs-importer-rest</artifactId>
          <!-- exclude data formats, let them be managed by the ones explicitly imported by this module -->
          <exclusions>
            <exclusion>
              <groupId>org.geotools</groupId>
              <artifactId>gt-shapefile</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.geotools.jdbc</groupId>
              <artifactId>gt-jdbc-h2</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.geotools.jdbc</groupId>
              <artifactId>gt-jdbc-oracle</artifactId>
            </exclusion>
            <exclusion>
              <groupId>org.geotools.jdbc</groupId>
              <artifactId>gt-jdbc-sqlserver</artifactId>
            </exclusion>
          </exclusions>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
